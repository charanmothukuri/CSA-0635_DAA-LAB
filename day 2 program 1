def findPaths(m, n, N, i, j):
    MOD = 10**9 + 1
    dp = [[[0] * n for _ in range(m)] for _ in range(N+1)]
    dp[0][i][j] = 1
    result = 0
    for step in range(1, N+1):
        for r in range(m):
            for c in range(n):
                dp[step][r][c] = (
                    (dp[step-1][r-1][c] if r > 0 else 0) +
                    (dp[step-1][r+1][c] if r < m-1 else 0) +
                    (dp[step-1][r][c-1] if c > 0 else 0) +
                    (dp[step-1][r][c+1] if c < n-1 else 0)
                ) % MOD
    for step in range(N+1):
        for r in range(m):
            result = (result + dp[step][r][0] + dp[step][r][n-1]) % MOD
        for c in range(n):
            result = (result + dp[step][0][c] + dp[step][m-1][c]) % MOD
    return result

# Example usage:
print(findPaths(2, 2, 2, 0, 0)) # Output: 6
print(findPaths(1, 3, 3, 0, 1)) # Output: 12
